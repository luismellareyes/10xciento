{
	"info": {
		"_postman_id": "4575da8b-c339-4a8a-8c4d-3a31c030b67e",
		"name": "taller_runner",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "https://jsonplaceholder.typicode.com/posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();",
							"pm.test(\"Response time is less than 200ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"}); ",
							"",
							"pm.test(\"Response property matches environment variable\", function () {",
							"  pm.expect(jsonData[0].userId).to.eql(1);",
							"});",
							"",
							"pm.test(\"Status code is 200\",function(){",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"",
							"pm.test(\"Test data type of the response\", () => {",
							"  pm.expect(jsonData).to.be.an(\"array\");",
							"  pm.expect(jsonData[0].userId).to.be.a(\"number\");",
							"  pm.expect(jsonData[0].id).to.be.a(\"number\");",
							"  pm.expect(jsonData[0].title).to.be.an(\"String\");",
							"  pm.expect(jsonData[0].body).to.be.an(\"String\");",
							" });",
							"",
							" pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/posts",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "https://jsonplaceholder.typicode.com/photos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type header is present\", () => {",
							"  pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 300ms\", () => {",
							"  pm.expect(pm.response.responseTime).to.be.below(300);",
							"});",
							"",
							"pm.test(\"Response length 5000\", () => {",
							"  pm.expect(pm.response.json()).to.have.lengthOf(5000);",
							"});",
							"",
							"pm.test(\"Response title 1 is 'accusamus beatae ad facilis cum similique qui sunt'\", () => {",
							"  pm.expect(pm.response.json()[0].title).to.equal(\"accusamus beatae ad facilis cum similique qui sunt\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://jsonplaceholder.typicode.com/photos",
					"protocol": "https",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"photos"
					]
				}
			},
			"response": []
		}
	]
}